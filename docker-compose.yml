services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=myapp_development
      - TZ=America/Argentina/Buenos_Aires
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - TZ=America/Argentina/Buenos_Aires
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile.dev
    container_name: yorick-mcp-server-dev
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/myapp_development
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MCP_PORT=3001
    volumes:
      - ./mcp-server:/app
      - /app/node_modules
    depends_on:
      - db
      - elasticsearch
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/mcp', (res) => { process.exit(res.statusCode === 405 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  db_data:
  elasticsearch_data: